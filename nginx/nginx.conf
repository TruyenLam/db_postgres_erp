# ================================================
# ERP TN Group - Nginx Secure Configuration
# Reverse proxy với SSL và security headers
# ================================================

# Events block
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP block
http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Hide nginx version
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Security headers (global)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;

    # SSL Configuration (global)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_dhparam /ssl/dhparam.pem;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name erp.tngroup.com shareapiai.com localhost;
        
        # Security: Block suspicious requests
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS Server - pgAdmin
    server {
        listen 443 ssl http2;
        server_name erp.tngroup.com shareapiai.com localhost;

        # SSL Certificates
        ssl_certificate /ssl/server.crt;
        ssl_certificate_key /ssl/server.key;

        # Security headers (specific)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Rate limiting
        limit_req zone=login burst=5 nodelay;

        # Root location (pgAdmin)
        location / {
            # Security checks
            if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
                return 405;
            }

            # Proxy to pgAdmin container
            proxy_pass http://pgadmin_secure:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # API endpoint với rate limiting cao hơn
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://pgadmin_secure:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Security: Block access to sensitive files
        location ~ /\.(ht|git|svn) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Block common attack patterns
        location ~* \.(env|config|ini|log|sh|bak|backup|swp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Upstream for PostgreSQL (for future database proxy if needed)
    upstream postgres_backend {
        server postgres_secure:5432;
        keepalive 32;
    }
}
