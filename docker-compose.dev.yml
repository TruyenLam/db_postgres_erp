# ================================================
# ERP TN Group - Development Override
# Additional services cho development environment
# ================================================

version: '3.8'

services:
  # Jupyter Notebook cho AI/ML development
  jupyter:
    image: jupyter/scipy-notebook:latest
    container_name: jupyter_ai_dev
    restart: unless-stopped
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "erp_tngroup_dev_2025"
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./python_vector_integration.py:/home/jovyan/work/vector_integration.py:ro
    networks:
      - erpnet_secure
    depends_on:
      - postgres
    # Install additional packages
    command: >
      bash -c "
      pip install psycopg2-binary numpy pandas scikit-learn openai cohere sentence-transformers &&
      start-notebook.sh --NotebookApp.token='erp_tngroup_dev_2025' --NotebookApp.allow_root=True
      "

  # pgAdmin development mode (vá»›i debug enabled)
  pgadmin_dev:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10  # DEBUG level
    ports:
      - "8081:80"
    volumes:
      - ./volumes/pgadmin_dev:/var/lib/pgadmin
    networks:
      - erpnet_secure
    depends_on:
      - postgres

  # Vector Database Monitoring
  vector_monitor:
    image: postgres:15-alpine
    container_name: vector_monitor
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - erpnet_secure
    depends_on:
      - postgres
    command: >
      sh -c "
      while true; do
        echo 'ðŸ“Š Vector Database Monitoring - $(date)'
        psql -h postgres_secure -U $$POSTGRES_USER -d $$POSTGRES_DB -c '
        SELECT 
          \"Documents\" as table_name,
          count(*) as total_rows,
          pg_size_pretty(pg_total_relation_size(\"vector_db.document_embeddings\")) as size
        FROM vector_db.document_embeddings
        UNION ALL
        SELECT 
          \"Products\" as table_name,
          count(*) as total_rows,
          pg_size_pretty(pg_total_relation_size(\"vector_db.product_embeddings\")) as size  
        FROM vector_db.product_embeddings;
        '
        sleep 300  # Monitor every 5 minutes
      done
      "

# Additional volumes cho development
volumes:
  jupyter_data:
    name: erp_jupyter_data
  pgadmin_dev_data:
    name: erp_pgadmin_dev_data
